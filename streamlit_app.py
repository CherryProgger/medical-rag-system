#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è Streamlit Cloud
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(project_root / "src"))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PYTHONPATH –¥–ª—è Streamlit Cloud
os.environ['PYTHONPATH'] = f"{project_root}:{project_root / 'src'}"

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞–ø—Ä—è–º—É—é
try:
    from medical_rag.interfaces.web_interface import create_web_app
    app = create_web_app()
    app()
except ImportError:
    # Fallback - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é
    import streamlit as st
    from medical_rag.core.rag_system import MedicalRAGSystem
    from medical_rag.data.data_processor import DataProcessor
    from medical_rag.models.config import Config
    import json
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_path = project_root / "config" / "default.json"
    with open(config_path, 'r', encoding='utf-8') as f:
        config_data = json.load(f)
    
    config = Config(**config_data)
    
    # –°–æ–∑–¥–∞–µ–º RAG —Å–∏—Å—Ç–µ–º—É
    @st.cache_resource
    def load_rag_system():
        rag_system = MedicalRAGSystem(config)
        return rag_system
    
    # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    st.set_page_config(
        page_title="Medical RAG System",
        page_icon="üè•",
        layout="wide"
    )
    
    st.title("üè• Medical RAG System")
    st.markdown("–°–∏—Å—Ç–µ–º–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º RAG —Å–∏—Å—Ç–µ–º—É
    rag_system = load_rag_system()
    
    # –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞
    with st.form("question_form"):
        question = st.text_area(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ß—Ç–æ —Ç–∞–∫–æ–µ –≤–∞—Ä–∏–∫–æ–∑–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–µ–Ω?",
            height=100
        )
        submit_button = st.form_submit_button("–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç")
    
    if submit_button and question:
        with st.spinner("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –≤–æ–ø—Ä–æ—Å..."):
            try:
                response = rag_system.query(question)
                
                st.success("–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
                st.markdown("### –û—Ç–≤–µ—Ç:")
                st.markdown(f"<div style='background-color: #f0f2f6; padding: 20px; border-radius: 10px; margin: 10px 0;'><p style='color: #2c3e50; font-size: 16px; line-height: 1.6;'>{response.answer}</p></div>", unsafe_allow_html=True)
                
                if response.sources:
                    st.markdown("### –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
                    for i, source in enumerate(response.sources, 1):
                        st.markdown(f"**{i}.** {source}")
                        
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞: {str(e)}")
    
    st.markdown("---")
    st.markdown("### –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
    st.markdown("- –ß—Ç–æ —Ç–∞–∫–æ–µ –≤–∞—Ä–∏–∫–æ–∑–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–µ–Ω?")
    st.markdown("- –ö–∞–∫ –ª–µ—á–∏—Ç—å —Ñ–ª–µ–±–∏—Ç—ã?")
    st.markdown("- –ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏—è?")
    st.markdown("- –ö–∞–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã –∏—à–µ–º–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Å—É–ª—å—Ç–∞?")
